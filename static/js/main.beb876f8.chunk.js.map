{"version":3,"sources":["contexts/campaign-context.js","components/campaign-form.js","components/campaign-table.js","views/campaign-view.js","App.js","serviceWorker.js","index.js"],"names":["CampaignContext","createContext","initialState","campaigns","id","name","text","status","segment_id","media","stats","sent","clicked","reducer","state","action","type","payload","filter","campaign","loading","Error","CampaignContextProvider","props","useReducer","dispatch","Provider","value","children","CampaignForm","useFormInput","useContext","Segment","basic","Form","onSubmit","length","onReset","Group","widths","Field","width","Input","placeholder","required","Button","fluid","primary","initialValue","useState","setValue","onChange","e","target","CampaignTable","selectedId","setSelectedId","selectedName","setSelectedName","selectedText","setSelectedText","selectedStatus","setSelectedStatus","selectedSegmentId","setSelectedSegmentId","selectedMedia","setSelectedMedia","selectedStats","setSelectedStats","rows","map","Table","Row","key","onClick","active","Cell","Header","as","celled","striped","selectable","HeaderCell","Body","Footer","fullWidth","colSpan","floated","icon","labelPosition","color","size","disabled","Icon","CampaignView","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.beb876f8.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nexport const CampaignContext = createContext();\n\nconst initialState = {\n  campaigns: [\n    {\n      id: 1,\n      name: \"Fourth of July Promo\",\n      text:\n        \"Hi {first_name}, it's {shop_name}! This 4th of July celebrate with our Freedom Sale!\",\n      status: \"Sent\",\n      segment_id: 1,\n      media: \"https://images.unsplash.com/photo-1556804335-2fa563e93aae\",\n      stats: {\n        sent: 6506,\n        clicked: 6137,\n      },\n    },\n    {\n      id: 2,\n      name: \"Labor Day Sale\",\n      text:\n        \"Hey {first_name}, it's {shop_name}! We have a HUGE sale on Labor Day, get up to 30% off with LABOR30. {shop_link}\",\n      status: \"Sent\",\n      segment_id: 1,\n      media: null,\n      stats: {\n        sent: 7228,\n        clicked: 6883,\n      },\n    },\n    {\n      id: 3,\n      name: \"Cotton Candy Palette Announcement\",\n      text:\n        \"Hi {first_name}! Here at {shop_name} we just got our NEW Cotton Candy Palette! {shop_link}\",\n      status: \"Sent\",\n      segment_id: 2,\n      media: \"https://images.unsplash.com/photo-1544220828-1becb7f7b284\",\n      stats: {\n        sent: 7246,\n        clicked: 7080,\n      },\n    },\n    {\n      id: 4,\n      name: \"Fall Decor Updates\",\n      text:\n        \"Hey {first_name}! Back at {shop_name} we've gotten a WILD amount of home updates you NEED this Fall. ðŸ‘€ {shop_link}\",\n      status: \"Preview\",\n      segment_id: 3,\n      media: \"https://images.unsplash.com/photo-1568485248685-019a98426c14\",\n      stats: null,\n    },\n    {\n      id: 5,\n      name: \"Great Halloween Sale\",\n      text:\n        \"It's the Great Halloween Sale, {first_name}! Things are getting pretty spooky here at {shop_name}. Take up to 20% off with SCARE20\",\n      status: \"Preview\",\n      segment_id: 1,\n      media: \"https://images.unsplash.com/photo-1537800534001-f3e01aa1c34c\",\n      stats: null,\n    },\n  ],\n  // segments: [\n  //   { id: 1, name: \"All Subscribers\", subscribers_count: 8920 },\n  //   { id: 2, name: \"Beauty Purchases\", subscribers_count: 7108 },\n  //   { id: 3, name: \"Decor Purchases\", subscribers_count: 1204 }\n  // ]\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_CAMPAIGN\":\n      return {\n        campaigns: [...state.campaigns, action.payload],\n      };\n\n    // case \"EDIT_CAMPAIGN\":\n    //   return {\n    //     campaigns: [...state.campaigns, action.payload],\n    //   }\n    case \"DELETE_CAMPAIGN\":\n      return {\n        campaigns: state.campaigns.filter(\n          (campaign) => campaign.id !== action.payload\n        ),\n      };\n    case \"START\":\n      return {\n        loading: true,\n      };\n    case \"COMPLETE\":\n      return {\n        loading: false,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const CampaignContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <CampaignContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </CampaignContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Button, Form, Input, Segment } from \"semantic-ui-react\";\nimport { CampaignContext } from \"../contexts/campaign-context\";\n\nexport default function CampaignForm() {\n  //default values are empty\n  const name = useFormInput(\"\");\n  const text = useFormInput(\"\");\n  const status = useFormInput(\"\");\n  const segment_id = useFormInput(\"\");\n  const media = useFormInput(\"\");\n  const stats = useFormInput(\"\");\n\n  const [state, dispatch] = useContext(CampaignContext);\n\n  const onSubmit = () => {\n    dispatch({\n      type: \"ADD_CAMPAIGN\",\n      payload: {\n        id: state.campaigns.length + 1,\n        name: name.value,\n        text: text.value,\n        status: status.value,\n        segment_id: segment_id.value,\n        media: media.value,\n        stats: stats.value,\n      },\n    });\n    // Reset Form\n    name.onReset();\n    text.onReset();\n    status.onReset();\n    segment_id.onReset();\n    media.onReset();\n    stats.onReset();\n  };\n\n  return (\n    <Segment basic>\n      <Form onSubmit={onSubmit}>\n        <Form.Group widths=\"3\">\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Name\" {...name} required />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Text\" {...text} type=\"text\" required />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Status\" {...status} type=\"text\" />\n          </Form.Field>\n        </Form.Group>\n        <Form.Group widths=\"3\">\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Segment ID\" {...segment_id} />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Media\" {...media} type=\"text\" />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Stats\" {...stats} type=\"text\" />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Button fluid primary>\n              New Campaign\n            </Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Segment>\n  );\n}\n\nfunction useFormInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleReset = () => {\n    setValue(\"\");\n  };\n\n  return {\n    value,\n    onChange: handleChange,\n    onReset: handleReset,\n  };\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\nimport { CampaignContext } from \"../contexts/campaign-context\";\n\nexport default function CampaignTable() {\n  const [state, dispatch] = useContext(CampaignContext);\n  //set state for editing/updating\n  const [editing, setEditing] = useState(false);\n  //set info for selected campaign\n  const [selectedId, setSelectedId] = useState();\n  const [selectedName, setSelectedName] = useState();\n  const [selectedText, setSelectedText] = useState();\n  const [selectedStatus, setSelectedStatus] = useState();\n  const [selectedSegmentId, setSelectedSegmentId] = useState();\n  const [selectedMedia, setSelectedMedia] = useState();\n  const [selectedStats, setSelectedStats] = useState();\n\n  //delete selected campaign\n  const deleteCampaign = (id) => {\n    dispatch({\n      type: \"DELETE_CAMPAIGN\",\n      payload: id,\n    });\n  };\n\n  //call delete and clear functions\n  const onRemoveCampaign = () => {\n    deleteCampaign(selectedId);\n    setSelectedId(null); // Clear selection\n  };\n\n  //map through campaigns data for table\n  const rows = state.campaigns.map((campaign) => (\n    <Table.Row\n      key={campaign.id}\n      onClick={() => {\n        setSelectedId(campaign.id);\n        setSelectedName(campaign.name);\n        setSelectedText(campaign.text);\n        setSelectedStatus(campaign.status);\n        setSelectedSegmentId(campaign.segment_id);\n        setSelectedMedia(campaign.media);\n        setSelectedStats(campaign.stats);\n      }}\n      active={campaign.id === selectedId}\n    >\n      <Table.Cell>{campaign.id}</Table.Cell>\n      <Table.Cell>{campaign.name}</Table.Cell>\n      <Table.Cell>{campaign.status}</Table.Cell>\n    </Table.Row>\n  ));\n\n  //for editing campaign-- not working ATM, need to set/save new values\n  const editCampaign = (id, name, text, status, segment_id, media, stats) => {\n    dispatch({\n      type: \"EDIT_CAMPAIGN\",\n      payload: {\n        id: id.value,\n        name: name.value,\n        text: text.value,\n        status: status.value,\n        segment_id: segment_id.value,\n        media: media.value,\n        stats: stats.value,\n      },\n    });\n  };\n\n  const onEditCampaign = () => {\n    editCampaign(selectedId);\n  };\n\n  return (\n    <Segment>\n      <Header as=\"h3\">All Campaigns</Header>\n\n      <Table celled striped selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{rows}</Table.Body>\n        <Table.Footer fullWidth>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell colSpan=\"4\">\n              <Button\n                floated=\"right\"\n                icon\n                labelPosition=\"left\"\n                color=\"red\"\n                size=\"small\"\n                disabled={!selectedId}\n                onClick={onRemoveCampaign}\n              >\n                <Icon name=\"trash\" /> Remove Campaign\n              </Button>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n      <h1>Selected Campaign Details</h1>\n      <Form>\n        <Form.Group widths=\"3\">\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Name\" value={selectedName} required />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input\n              placeholder=\"Enter Text\"\n              value={selectedText}\n              type=\"text\"\n              required\n            />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input\n              placeholder=\"Enter Status\"\n              value={selectedStatus}\n              type=\"text\"\n            />\n          </Form.Field>\n        </Form.Group>\n        <Form.Group widths=\"3\">\n          <Form.Field width={4}>\n            <Input placeholder=\"Enter Segment ID\" value={selectedSegmentId} />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input\n              placeholder=\"Enter Media\"\n              value={selectedMedia}\n              type=\"text\"\n            />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Input\n              placeholder=\"Enter Stats\"\n              value={selectedStats}\n              type=\"text\"\n            />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Button fluid primary>\n              Update Campaign\n            </Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Segment>\n  );\n}\n","import React from \"react\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport CampaignForm from \"../components/campaign-form\";\nimport CampaignTable from \"../components/campaign-table\";\nimport { CampaignContextProvider } from \"../contexts/campaign-context\";\n\nexport default function CampaignView() {\n  return (\n    <CampaignContextProvider>\n      <Segment basic>\n        <Header as=\"h3\">Create New Campaign</Header>\n        <CampaignForm />\n        <CampaignTable />\n      </Segment>\n    </CampaignContextProvider>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport CampaignView from \"./views/campaign-view\";\nexport default function App() {\n  return (\n    <Container>\n      <h1>PS Campaigns Dashboard</h1>\n      <CampaignView />\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"fomantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}